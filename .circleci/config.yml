---
version: 2.1

orbs:
  codecov: codecov/codecov@3.2.2

workflows:
  test:
    jobs:
      - static-checks
      - test:
          name: test-python<< matrix.python_version >>
          matrix:
            parameters:
              python_version: ["3.8", "3.9"]
          requires:
            - static-checks

executors:
  docker-executor:
    parameters:
      python_version:
        type: string
        default: "3.7"
    docker:
      - image: cimg/python:<<parameters.python_version>>

jobs:
  static-checks:
    description: "Static checks"
    executor: docker-executor
    steps:
      - checkout
      - run:
          command: |
            cp .pre-commit-config.yaml pre-commit-cache-key.txt
            python --version --version >> pre-commit-cache-key.txt
      - restore_cache:
          keys:
            - v1-pc-cache-{{ checksum "pre-commit-cache-key.txt" }}-
      - run:
          name: Run pre-commit
          command: |
            pip install pre-commit
            pre-commit run --all-files || { git --no-pager diff && false ; }
      - save_cache:
          key: v1-pc-cache-{{ checksum "pre-commit-cache-key.txt" }}-
          paths:
            - ~/.cache/pre-commit
            - ~/.pyenv/versions/

  test:
    parameters:
      python_version:
        description: "Python Version"
        type: string
    description: Test Python-<<parameters.python_version>>
    executor:
      name: docker-executor
      python_version: "<<parameters.python_version>>"
    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-{{ .Branch }}-{{ checksum "setup.cfg" }}-{{ checksum "/home/circleci/.pyenv/version" }}
            - deps-main-{{ checksum "setup.cfg" }}-{{ checksum "/home/circleci/.pyenv/version" }}
      - run:
          name: Install Dependencies
          command: pip install -U -e .[tests]
      - run:
          name: Run tests
          command: |
            pytest --junit-xml=test-report/report.xml
      - codecov/upload:
          file: coverage.xml
      - run:
          name: Generate Constraints
          command: pip freeze > constraints-<<parameters.python_version>>.txt
      - store_artifacts:
          path: constraints-<<parameters.python_version>>.txt
      - store_test_results:
          path: test-report
      - save_cache:
          paths:
            - ~/.cache/pip
            - ~/.pyenv/versions/
          key: deps-{{ .Branch }}-{{ checksum "setup.cfg" }}-{{ checksum "/home/circleci/.pyenv/version" }}

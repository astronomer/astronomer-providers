---
name: deploy-integration-tests-to-astro-cloud

on:  # yamllint disable-line rule:truthy
  schedule:
    - cron: "0 19 * * *"
  workflow_dispatch:
    inputs:
      git_rev:
        description: 'The git revision to deploy'
        required: false
        default: ''
      environment_to_deploy:
        description: 'astro cloud deployment to deploy to'
        required: true
        type: choice
        options:
          - both
          - providers-integration-tests
          - providers-integration-tests-on-KE
      dags_to_trigger_after_deployment:
        description: |
          Comma separated list of dag_ids to trigger after deployment
          (e.g. "example_async_adf_run_pipeline, example_async_batch")
        required: false
        type: string
        default: ''

jobs:
  deploy-to-providers-integration-tests:
    if: |
      contains(fromJSON('["both", "providers-integration-tests"]'), inputs.environment_to_deploy) ||
      github.event_name == 'schedule'
    uses: ./.github/workflows/deploy-to-astro-cloud-reuse-wf.yaml
    with:
      git_rev: ${{ inputs.git_rev }}
      environment_to_deploy: 'providers-integration-tests'
    secrets:
      docker_registry: ${{ secrets.DOCKER_REGISTRY }}
      organization_id: ${{ secrets.ORGANIZATION_ID }}
      deployment_id: ${{ secrets.PROVIDER_INTEGRATION_TESTS_DEPLOYMENT_ID }}
      astronomer_key_id: ${{ secrets.PROVIDER_INTEGRATION_TESTS_ASTRONOMER_KEY_ID }}
      astronomer_key_secret: ${{ secrets.PROVIDER_INTEGRATION_TESTS_ASTRONOMER_KEY_SECRET }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  wait-for-deployment-to-be-ready-and-trigger-dags-for-providers-integration-tests:
    if: |
      github.event_name == 'schedule' ||
      (github.event_name == 'workflow_dispatch' && inputs.dags_to_trigger_after_deployment != '')
    needs: deploy-to-providers-integration-tests
    uses: ./.github/workflows/trigger-dag-reuse-wf.yaml
    with:
      git_rev: ${{ inputs.git_rev }}
      dags_to_trigger_after_deployment: ${{ inputs.dags_to_trigger_after_deployment }}
    secrets:
      astro_subdomain: ${{ secrets.ASTRO_SUBDOMAIN }}
      deployment_id: ${{ secrets.PROVIDER_INTEGRATION_TESTS_DEPLOYMENT_ID }}
      astronomer_key_id: ${{ secrets.PROVIDER_INTEGRATION_TESTS_ASTRONOMER_KEY_ID }}
      astronomer_key_secret: ${{ secrets.PROVIDER_INTEGRATION_TESTS_ASTRONOMER_KEY_SECRET }}
      organization_id: ${{ secrets.ORGANIZATION_ID }}
      bearer_token: ${{ secrets.BEARER_TOKEN }}

  deploy-to-providers-integration-tests-on-KE:
    if: |
      contains(fromJSON('["both", "providers-integration-tests-on-KE"]'), inputs.environment_to_deploy) ||
      github.event_name == 'schedule'
    uses: ./.github/workflows/deploy-to-astro-cloud-reuse-wf.yaml
    with:
      git_rev: ${{ inputs.git_rev }}
      environment_to_deploy: 'providers-integration-tests-on-KE'
    secrets:
      docker_registry: ${{ secrets.DOCKER_REGISTRY }}
      organization_id: ${{ secrets.ORGANIZATION_ID }}
      deployment_id: ${{ secrets.PROVIDER_INTEGRATION_TESTS_ON_KE_DEPLOYMENT_ID }}
      astronomer_key_id: ${{ secrets.PROVIDER_INTEGRATION_TESTS_ON_KE_ASTRONOMER_KEY_ID }}
      astronomer_key_secret: ${{ secrets.PROVIDER_INTEGRATION_TESTS_ON_KE_ASTRONOMER_KEY_SECRET }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  wait-for-deployment-to-be-ready-and-trigger-dags-for-providers-integration-tests-on-KE:
    if: |
      github.event_name == 'schedule' ||
      (github.event_name == 'workflow_dispatch' && inputs.dags_to_trigger_after_deployment != '')
    needs: deploy-to-providers-integration-tests-on-KE
    uses: ./.github/workflows/trigger-dag-reuse-wf.yaml
    with:
      git_rev: ${{ inputs.git_rev }}
      dags_to_trigger_after_deployment: ${{ inputs.dags_to_trigger_after_deployment }}
    secrets:
      astro_subdomain: ${{ secrets.ASTRO_SUBDOMAIN }}
      deployment_id: ${{ secrets.PROVIDER_INTEGRATION_TESTS_ON_KE_DEPLOYMENT_ID }}
      astronomer_key_id: ${{ secrets.PROVIDER_INTEGRATION_TESTS_ON_KE_ASTRONOMER_KEY_ID }}
      astronomer_key_secret: ${{ secrets. PROVIDER_INTEGRATION_TESTS_ON_KE_ASTRONOMER_KEY_SECRET }}
      organization_id: ${{ secrets.ORGANIZATION_ID }}
      bearer_token: ${{ secrets.BEARER_TOKEN }}
